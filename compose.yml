version: '3.8'
services:
  
  dashboard:
    build:
      context: .
      dockerfile: Dashboard/Dockerfile.Dashboard
    image: daq-dashboard:latest
    container_name: dashboard
    volumes:
      - ./config.env:/app/config.env
      - /dev/bus/usb:/dev/bus/usb
    devices:
      - /dev/bus/usb:/dev/bus/usb
    group_add:
      - "${DOCKER_GROUP_ID:-991}"
    ports:
      - "80:80"
    environment:
      - REDIS_HOST=redis
      - INFLUXDB_HOST=influxdb
      - GRAFANA_URL=http://grafana:3000
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - redis
      - influxdb
      - grafana
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  logger:
    build:
      context: .
      dockerfile: Logger/Dockerfile.Logger
    image: daq-logger:latest
    container_name: logger
    volumes:
      - ./config.env:/app/config.env
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - "${DOCKER_GROUP_ID:-991}"
    environment:
      - REDIS_HOST=redis
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
      - INFLUXDB_ORG=DAQ
      - INFLUXDB_BUCKET=logger
      - INFLUXDB_TOKEN=8_qFm2VXj6ri_SVbdtzaVP7KiC1A45RMCCvEkLeGzwPUe8otW8N0bsjHoSHm6w3u3Jvg6vDcNJ193ris9VUa0w==
    depends_on:
      - redis
      - influxdb
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import redis; redis.Redis(host='redis').ping()"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    container_name: redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    mem_limit: 256M
    memswap_limit: 512M

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=DAQ
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
      - DOCKER_INFLUXDB_INIT_ORG=DAQ
      - DOCKER_INFLUXDB_INIT_BUCKET=logger
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=8_qFm2VXj6ri_SVbdtzaVP7KiC1A45RMCCvEkLeGzwPUe8otW8N0bsjHoSHm6w3u3Jvg6vDcNJ193ris9VUa0w==
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  grafana_data:
  influxdb_data: